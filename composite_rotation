Rx = @(theta) [1, 0, 0; 0, cos(theta), -sin(theta); 0, sin(theta), cos(theta)];
Ry = @(theta) [cos(theta), 0, sin(theta); 0, 1, 0; -sin(theta), 0, cos(theta)];
Rz = @(theta) [cos(theta), -sin(theta), 0; sin(theta), cos(theta), 0; 0, 0, 1];
R = eye(3);


axis_type = input('Select axis type: 1 for mobile, 2 for fixed: ');
frame_order = input('Enter the rotation order (e.g., "XYZ", "ZYX", etc.): ', 's');
angles_deg = input('Enter the rotation angles in degrees as a vector [alpha, beta, gamma]: ');
angles_rad = deg2rad(angles_deg);
inp_point = input('Enter the points as a vector [P1, P2, P3]: ');

if axis_type == 1
    for i = 1:length(frame_order)
        axis = frame_order(i);
        switch axis
            case 'X'
                R = Rx(angles_rad(i)) * R;
            case 'Y'
                R = Ry(angles_rad(i)) * R;
            case 'Z'
                R = Rz(angles_rad(i)) * R;
            otherwise
                error('Invalid rotation axis specified. Use X, Y, or Z.');
        end
    end
elseif axis_type == 2
    for i = length(frame_order):-1:1
        axis = frame_order(i);
        switch axis
            case 'X'
                R = R * Rx(angles_rad(i));
            case 'Y'
                R = R * Ry(angles_rad(i));
            case 'Z'
                R = R * Rz(angles_rad(i));
            otherwise
                error('Invalid rotation axis specified. Use X, Y, or Z.');
        end
    end
else
    error('Invalid axis type. Please select 1 for mobile or 2 for fixed.');
end
disp('Composite Rotation Matrix:');
disp(R);
final_point = inp_point * R;
disp("Final Points: ")
disp(final_point);
